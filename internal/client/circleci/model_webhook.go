/*
CircleCI API

This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package circleci

import (
	"encoding/json"
	"time"
)

// checks if the Webhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Webhook{}

// Webhook struct for Webhook
type Webhook struct {
	// URL to deliver the webhook to. Note: protocol must be included as well (only https is supported)
	Url string `json:"url"`
	// Whether to enforce TLS certificate verification when delivering the webhook
	VerifyTls bool `json:"verify-tls"`
	// The unique ID of the webhook
	Id string `json:"id"`
	// Masked value of the secret used to build an HMAC hash of the payload and passed as a header in the webhook request
	SigningSecret string `json:"signing-secret"`
	// The date and time the webhook was last updated.
	UpdatedAt time.Time `json:"updated-at"`
	// Name of the webhook
	Name string `json:"name"`
	// The date and time the webhook was created.
	CreatedAt time.Time    `json:"created-at"`
	Scope     WebhookScope `json:"scope"`
	// Events that will trigger the webhook
	Events []string `json:"events"`
}

// NewWebhook instantiates a new Webhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhook(url string, verifyTls bool, id string, signingSecret string, updatedAt time.Time, name string, createdAt time.Time, scope WebhookScope, events []string) *Webhook {
	this := Webhook{}
	this.Url = url
	this.VerifyTls = verifyTls
	this.Id = id
	this.SigningSecret = signingSecret
	this.UpdatedAt = updatedAt
	this.Name = name
	this.CreatedAt = createdAt
	this.Scope = scope
	this.Events = events
	return &this
}

// NewWebhookWithDefaults instantiates a new Webhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookWithDefaults() *Webhook {
	this := Webhook{}
	return &this
}

// GetUrl returns the Url field value
func (o *Webhook) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Webhook) SetUrl(v string) {
	o.Url = v
}

// GetVerifyTls returns the VerifyTls field value
func (o *Webhook) GetVerifyTls() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.VerifyTls
}

// GetVerifyTlsOk returns a tuple with the VerifyTls field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetVerifyTlsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerifyTls, true
}

// SetVerifyTls sets field value
func (o *Webhook) SetVerifyTls(v bool) {
	o.VerifyTls = v
}

// GetId returns the Id field value
func (o *Webhook) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Webhook) SetId(v string) {
	o.Id = v
}

// GetSigningSecret returns the SigningSecret field value
func (o *Webhook) GetSigningSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SigningSecret
}

// GetSigningSecretOk returns a tuple with the SigningSecret field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetSigningSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SigningSecret, true
}

// SetSigningSecret sets field value
func (o *Webhook) SetSigningSecret(v string) {
	o.SigningSecret = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Webhook) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Webhook) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetName returns the Name field value
func (o *Webhook) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Webhook) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Webhook) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Webhook) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetScope returns the Scope field value
func (o *Webhook) GetScope() WebhookScope {
	if o == nil {
		var ret WebhookScope
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetScopeOk() (*WebhookScope, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *Webhook) SetScope(v WebhookScope) {
	o.Scope = v
}

// GetEvents returns the Events field value
func (o *Webhook) GetEvents() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetEventsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *Webhook) SetEvents(v []string) {
	o.Events = v
}

func (o Webhook) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Webhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["verify-tls"] = o.VerifyTls
	toSerialize["id"] = o.Id
	toSerialize["signing-secret"] = o.SigningSecret
	toSerialize["updated-at"] = o.UpdatedAt
	toSerialize["name"] = o.Name
	toSerialize["created-at"] = o.CreatedAt
	toSerialize["scope"] = o.Scope
	toSerialize["events"] = o.Events
	return toSerialize, nil
}

type NullableWebhook struct {
	value *Webhook
	isSet bool
}

func (v NullableWebhook) Get() *Webhook {
	return v.value
}

func (v *NullableWebhook) Set(val *Webhook) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhook(val *Webhook) *NullableWebhook {
	return &NullableWebhook{value: val, isSet: true}
}

func (v NullableWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
