/*
CircleCI API

This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package circleci

import (
	"encoding/json"
)

// checks if the CreateContextRequestOwnerOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateContextRequestOwnerOneOf{}

// CreateContextRequestOwnerOneOf struct for CreateContextRequestOwnerOneOf
type CreateContextRequestOwnerOneOf struct {
	// The unique ID of the owner of the context. Specify either this or slug.
	Id string `json:"id"`
	// The type of the owner. Defaults to \"organization\". Accounts are only used as context owners in server.
	Type *string `json:"type,omitempty"`
}

// NewCreateContextRequestOwnerOneOf instantiates a new CreateContextRequestOwnerOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateContextRequestOwnerOneOf(id string) *CreateContextRequestOwnerOneOf {
	this := CreateContextRequestOwnerOneOf{}
	this.Id = id
	return &this
}

// NewCreateContextRequestOwnerOneOfWithDefaults instantiates a new CreateContextRequestOwnerOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateContextRequestOwnerOneOfWithDefaults() *CreateContextRequestOwnerOneOf {
	this := CreateContextRequestOwnerOneOf{}
	return &this
}

// GetId returns the Id field value
func (o *CreateContextRequestOwnerOneOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateContextRequestOwnerOneOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateContextRequestOwnerOneOf) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateContextRequestOwnerOneOf) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContextRequestOwnerOneOf) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateContextRequestOwnerOneOf) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateContextRequestOwnerOneOf) SetType(v string) {
	o.Type = &v
}

func (o CreateContextRequestOwnerOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateContextRequestOwnerOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableCreateContextRequestOwnerOneOf struct {
	value *CreateContextRequestOwnerOneOf
	isSet bool
}

func (v NullableCreateContextRequestOwnerOneOf) Get() *CreateContextRequestOwnerOneOf {
	return v.value
}

func (v *NullableCreateContextRequestOwnerOneOf) Set(val *CreateContextRequestOwnerOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateContextRequestOwnerOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateContextRequestOwnerOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateContextRequestOwnerOneOf(val *CreateContextRequestOwnerOneOf) *NullableCreateContextRequestOwnerOneOf {
	return &NullableCreateContextRequestOwnerOneOf{value: val, isSet: true}
}

func (v NullableCreateContextRequestOwnerOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateContextRequestOwnerOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
