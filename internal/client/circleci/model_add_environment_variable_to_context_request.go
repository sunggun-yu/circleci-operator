/*
CircleCI API

This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package circleci

import (
	"encoding/json"
)

// checks if the AddEnvironmentVariableToContextRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddEnvironmentVariableToContextRequest{}

// AddEnvironmentVariableToContextRequest struct for AddEnvironmentVariableToContextRequest
type AddEnvironmentVariableToContextRequest struct {
	// The value of the environment variable
	Value string `json:"value"`
}

// NewAddEnvironmentVariableToContextRequest instantiates a new AddEnvironmentVariableToContextRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddEnvironmentVariableToContextRequest(value string) *AddEnvironmentVariableToContextRequest {
	this := AddEnvironmentVariableToContextRequest{}
	this.Value = value
	return &this
}

// NewAddEnvironmentVariableToContextRequestWithDefaults instantiates a new AddEnvironmentVariableToContextRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddEnvironmentVariableToContextRequestWithDefaults() *AddEnvironmentVariableToContextRequest {
	this := AddEnvironmentVariableToContextRequest{}
	return &this
}

// GetValue returns the Value field value
func (o *AddEnvironmentVariableToContextRequest) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *AddEnvironmentVariableToContextRequest) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *AddEnvironmentVariableToContextRequest) SetValue(v string) {
	o.Value = v
}

func (o AddEnvironmentVariableToContextRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddEnvironmentVariableToContextRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableAddEnvironmentVariableToContextRequest struct {
	value *AddEnvironmentVariableToContextRequest
	isSet bool
}

func (v NullableAddEnvironmentVariableToContextRequest) Get() *AddEnvironmentVariableToContextRequest {
	return v.value
}

func (v *NullableAddEnvironmentVariableToContextRequest) Set(val *AddEnvironmentVariableToContextRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddEnvironmentVariableToContextRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddEnvironmentVariableToContextRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddEnvironmentVariableToContextRequest(val *AddEnvironmentVariableToContextRequest) *NullableAddEnvironmentVariableToContextRequest {
	return &NullableAddEnvironmentVariableToContextRequest{value: val, isSet: true}
}

func (v NullableAddEnvironmentVariableToContextRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddEnvironmentVariableToContextRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
